/* public/css/styles.css */

/* Define CSS Variables for your custom colors */
:root {
    --color-taxi-yellow: #FFF399; /* The primary taxi yellow */
    --color-taxi-yellow-header: #FFF303; /* The slightly different yellow for the header */
    /* Add any other custom colors you frequently use */
}

/* Custom CSS class for the Gruppo font */
.font-gruppo {
    font-family: 'Gruppo', sans-serif;
}

/* Custom CSS classes for your taxi yellow background */
.bg-taxi-yellow {
    background-color: var(--color-taxi-yellow);
}

.bg-taxi-yellow-header {
    background-color: var(--color-taxi-yellow-header);
}

/* Custom CSS class for your taxi yellow text color */
.text-taxi-yellow {
    color: var(--color-taxi-yellow);
}

/* Custom CSS class for your taxi yellow border color */
.border-taxi-yellow {
    border-color: var(--color-taxi-yellow);
}

/* Animation for pulsating text color change */
@keyframes textColorChange {
    0% { color: var(--color-taxi-yellow); }
    50% { color: #ffffff; } /* Change to white or another contrasting color */
    100% { color: var(--color-taxi-yellow); }
}

.animate-text-color-change {
    animation: textColorChange 3s infinite alternate; /* Adjust duration as needed */
}

/* Ensure the hover state for services icons changes to the correct color */
.group:hover .text-taxi-icon-hover { /* Create a new class for the hover color */
    color: var(--color-black); /* Assuming black is defined or default */
}

/* Add any other custom styles you need */
/* public/css/styles.css */

/* From Uiverse.io by marcelodolza */ 
.button {
  --white: #000000;
  --purple-100: #c6bc00;
  --purple-200: #d7cd00;
  --purple-300: #e1d500;
  --purple-400: #ede100;
  --purple-500: rgb(255, 243, 3);
  --radius: 18px;

  border-radius: var(--radius);
  outline: none;
  cursor: pointer;
  font-size: 23px;
  font-family: gruppo;
  background: transparent;
  letter-spacing: -1px;
  border: 0;
  position: relative;
  width: 220px;
  height: 80px;
  transform: rotate(353deg) skewX(4deg);
}

.bg {
  position: absolute;
  inset: 0;
  border-radius: inherit;
  filter: blur(1px);
}
.bg::before,
.bg::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: calc(var(--radius) * 1.1);
  background: var(--yellow-500);
}
.bg::before {
  filter: blur(5px);
  transition: all 0.3s ease;
  box-shadow:
    -7px 6px 0 0 rgb(255 243 3 / 50%),
    -14px 12px 0 0 rgb(255 243 3 / 30%),
    -21px 18px 4px 0 rgb(255 243 3 / 25%),
    -28px 24px 8px 0 rgb(255 243 3 / 15%),
    -35px 30px 12px 0 rgb(255 243 3 / 12%),
    -42px 36px 16px 0 rgb(255 243 3 / 8%),
    -56px 42px 20px 0 rgb(255 243 3 / 5%);
}

.wrap {
  border-radius: inherit;
  overflow: hidden;
  height: 100%;
  transform: translate(6px, -6px);
  padding: 3px;
  background: linear-gradient(
    to bottom,
    var(--purple-100) 0%,
    var(--purple-400) 100%
  );
  position: relative;
  transition: all 0.3s ease;
}

.outline {
  position: absolute;
  overflow: hidden;
  inset: 0;
  opacity: 0;
  outline: none;
  border-radius: inherit;
  transition: all 0.4s ease;
}
.outline::before {
  content: "";
  position: absolute;
  inset: 2px;
  width: 120px;
  height: 300px;
  margin: auto;
  background: linear-gradient(
    to right,
    transparent 0%,
    white 50%,
    transparent 100%
  );
  animation: spin 3s linear infinite;
  animation-play-state: paused;
}

.content {
  pointer-events: none;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1;
  position: relative;
  height: 100%;
  gap: 16px;
  border-radius: calc(var(--radius) * 0.85);
  font-weight: 600;
  transition: all 0.3s ease;
  background: linear-gradient(
    to bottom,
    var(--yellow-300) 0%,
    var(--yellow-400) 100%
  );
  box-shadow:
    inset -2px 12px 11px -5px var(--yellow-200),
    inset 1px -3px 11px 0px rgb(0 0 0 / 35%);
}
.content::before {
  content: "";
  inset: 0;
  position: absolute;
  z-index: 10;
  width: 80%;
  top: 45%;
  bottom: 35%;
  opacity: 0.7;
  margin: auto;
  background: linear-gradient(to bottom, transparent, var(--purple-400));
  filter: brightness(1.3) blur(5px);
}

.char {
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}
.char span {
  display: block;
  color: transparent;
  position: relative;
}

.char.state-1 span {
  animation: charAppear 1.2s ease backwards calc(var(--i) * 0.03s);
}
.char.state-1 span::before,
.char span::after {
  content: attr(data-label);
  position: absolute;
  color: var(--white);
  text-shadow: -1px 1px 2px var(--purple-500);
  left: 0;
}
.char span::before {
  opacity: 0;
  transform: translateY(-100%);
}
.char.state-2 {
  position: absolute;
  left: 80px;
}
.char.state-2 span::after {
  opacity: 1;
}

.icon {
  animation: resetArrow 0.8s cubic-bezier(0.7, -0.5, 0.3, 1.2) forwards;
  z-index: 10;
}
.icon div,
.icon div::before,
.icon div::after {
  height: 3px;
  border-radius: 1px;
  background-color: var(--white);
}
.icon div::before,
.icon div::after {
  content: "";
  position: absolute;
  right: 0;
  transform-origin: center right;
  width: 14px;
  border-radius: 15px;
  transition: all 0.3s ease;
}
.icon div {
  position: relative;
  width: 24px;
  box-shadow: -2px 2px 5px var(--purple-400);
  transform: scale(0.9);
  background: linear-gradient(to bottom, var(--white), var(--purple-100));
  animation: swingArrow 1s ease-in-out infinite;
  animation-play-state: paused;
}
.icon div::before {
  transform: rotate(44deg);
  top: 1px;
  box-shadow: 1px -2px 3px -1px var(--purple-400);
  animation: rotateArrowLine 1s linear infinite;
  animation-play-state: paused;
}
.icon div::after {
  bottom: 1px;
  transform: rotate(316deg);
  box-shadow: -2px 2px 3px 0 var(--purple-400);
  background: linear-gradient(200deg, var(--white), var(--purple-100));
  animation: rotateArrowLine2 1s linear infinite;
  animation-play-state: paused;
}

.path {
  position: absolute;
  z-index: 12;
  bottom: 0;
  left: 0;
  right: 0;
  stroke-dasharray: 150 480;
  stroke-dashoffset: 150;
  pointer-events: none;
}

.splash {
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none;
  stroke-dasharray: 60 60;
  stroke-dashoffset: 60;
  transform: translate(-17%, -31%);
  stroke: var(--purple-300);
}

/** STATES */

.button:hover .words {
  opacity: 1;
}
.button:hover .words span {
  animation-play-state: running;
}

.button:hover .char.state-1 span::before {
  animation: charAppear 0.7s ease calc(var(--i) * 0.03s);
}

.button:hover .char.state-1 span::after {
  opacity: 1;
  animation: charDisappear 0.7s ease calc(var(--i) * 0.03s);
}

.button:hover .wrap {
  transform: translate(8px, -8px);
}

.button:hover .outline {
  opacity: 1;
}

.button:hover .outline::before,
.button:hover .icon div::before,
.button:hover .icon div::after,
.button:hover .icon div {
  animation-play-state: running;
}

.button:active .bg::before {
  filter: blur(5px);
  opacity: 0.7;
  box-shadow:
    -7px 6px 0 0 rgb(255 243 3 / 40%),
    -14px 12px 0 0 rgb(255 243 3 / 25%),
    -21px 18px 4px 0 rgb(255 243 3 / 15%);
}
.button:active .content {
  box-shadow:
    inset -1px 12px 8px -5px rgba(0, 0, 0, 0.4),
    inset 0px -3px 8px 0px var(--purple-200);
}

.button:active .words,
.button:active .outline {
  opacity: 0;
}

.button:active .wrap {
  transform: translate(3px, -3px);
}

.button:active .splash {
  animation: splash 0.8s cubic-bezier(0.3, 0, 0, 1) forwards 0.05s;
}

.button:focus .path {
  animation: path 1.6s ease forwards 0.2s;
}

.button:focus .icon {
  animation: arrow 1s cubic-bezier(0.7, -0.5, 0.3, 1.5) forwards;
}

.char.state-2 span::after,
.button:focus .char.state-1 span {
  animation: charDisappear 0.5s ease forwards calc(var(--i) * 0.03s);
}

.button:focus .char.state-2 span::after {
  animation: charAppear 1s ease backwards calc(var(--i) * 0.03s);
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes charAppear {
  0% {
    transform: translateY(50%);
    opacity: 0;
    filter: blur(20px);
  }
  20% {
    transform: translateY(70%);
    opacity: 1;
  }
  50% {
    transform: translateY(-15%);
    opacity: 1;
    filter: blur(0);
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes charDisappear {
  0% {
    transform: translateY(0);
    opacity: 1;
  }
  100% {
    transform: translateY(-70%);
    opacity: 0;
    filter: blur(3px);
  }
}

@keyframes arrow {
  0% {
    opacity: 1;
  }
  50% {
    transform: translateX(60px);
    opacity: 0;
  }
  51% {
    transform: translateX(-200px);
    opacity: 0;
  }
  100% {
    transform: translateX(-128px);
    opacity: 1;
  }
}

@keyframes swingArrow {
  50% {
    transform: translateX(5px) scale(0.9);
  }
}

@keyframes rotateArrowLine {
  50% {
    transform: rotate(30deg);
  }
  80% {
    transform: rotate(55deg);
  }
}

@keyframes rotateArrowLine2 {
  50% {
    transform: rotate(330deg);
  }
  80% {
    transform: rotate(300deg);
  }
}

@keyframes resetArrow {
  0% {
    transform: translateX(-128px);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes path {
  from {
    stroke: white;
  }
  to {
    stroke-dashoffset: -480;
    stroke: #fff303;
  }
}

@keyframes splash {
  to {
    stroke-dasharray: 2 60;
    stroke-dashoffset: -60;
  }
}


/* Behalten Sie die originalen Tailwind-Klassen für das Icon bei, falls nicht anderswo überschrieben */
/* Diese Stile für das Icon sind weiterhin relevant und werden von Tailwind bereitgestellt */
.size-4 {
    width: 1rem; /* 16px */
    height: 1rem; /* 16px */
}

.flex { display: flex; }
.relative { position: relative; }
.inline-flex { display: inline-flex; }
.absolute { position: absolute; }
.h-full { height: 100%; }
.w-full { width: 100%; }
.animate-ping { animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite; }
.rounded-full { border-radius: 9999px; }
.bg-white { background-color: white; }
.opacity-75 { opacity: 0.75; }
.bg-green-500 { background-color: rgb(34 197 94); } /* Beispiel für Tailwind-Farbe */

/* Die @keyframes für animate-ping müssen auch vorhanden sein, typischerweise von Tailwind */
@keyframes ping {
    75%, 100% {
        transform: scale(2);
        opacity: 0;
    }
}


/* From Uiverse.io by wilsondesouza */
ul {
  list-style: none;
  padding: 0; /* Entferne Standard-Padding von UL */
  margin: 0; /* Entferne Standard-Margin von UL */
}

.example-2 {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap; /* Ermöglicht Umbruch bei kleineren Bildschirmen */
  gap: 20px; /* Besserer Abstand zwischen den Buttons als fester Margin */
}
.example-2 .icon-content {
  /* margin: 0 10px; -- Dies wird durch 'gap' im Flex-Container besser gehandhabt */
  position: relative;
}
.example-2 .icon-content .tooltip {
  position: absolute;
  top: -30px;
  left: 50%;
  transform: translateX(-50%);
  color: #fff;
  padding: 6px 10px;
  border-radius: 5px;
  opacity: 0;
  visibility: hidden;
  font-size: 14px;
  transition: all 0.3s ease;
  white-space: nowrap; /* Verhindert Zeilenumbruch im Tooltip */
}
.example-2 .icon-content:hover .tooltip {
  opacity: 1;
  visibility: visible;
  top: -50px;
}
.example-2 .icon-content a {
  position: relative;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  color: #4d4d4d;
  background-color: #fff;
  transition: all 0.3s ease-in-out;
  text-decoration: none; /* Wichtig: Link-Unterstreichung entfernen */
  outline: none; /* Fokus-Outline entfernen */
}
.example-2 .icon-content a:hover {
  box-shadow: 3px 2px 45px 0px rgb(0 0 0 / 12%);
}
.example-2 .icon-content a svg {
  position: relative;
  z-index: 1;
  width: 30px;
  height: 30px;
}
.example-2 .icon-content a:hover {
  color: white;
}
.example-2 .icon-content a .filled {
  position: absolute;
  top: auto;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 0;
  background-color: #000;
  transition: all 0.3s ease-in-out;
}
.example-2 .icon-content a:hover .filled {
  height: 100%;
}

/* Original colors for WhatsApp, Facebook, Instagram */

.example-2 .icon-content a[data-social="facebook"] .filled,
.example-2 .icon-content a[data-social="facebook"] ~ .tooltip {
  background-color: #3b5998;
}
.example-2 .icon-content a[data-social="instagram"] .filled,
.example-2 .icon-content a[data-social="instagram"] ~ .tooltip {
  background: linear-gradient(
    45deg,
    #405de6,
    #5b51db,
    #b33ab4,
    #c135b4,
    #e1306c,
    #fd1f1f
  );
}
.example-2 .icon-content a[data-social="youtube"] .filled,
.example-2 .icon-content a[data-social="youtube"] ~ .tooltip {
  background-color: #ff0000;
}

/* --- NEU: Styling für Google Bewertungen Button --- */
.example-2 .icon-content a[data-social="google-reviews"] .filled,
.example-2 .icon-content a[data-social="google-reviews"] ~ .tooltip {
  background-color: #ea4335; /* Google Rot */
}


/* --- NEU: Für den Button-Link --- */
.button-link {
    text-decoration: none; /* Entfernt die Unterstreichung */
    color: inherit; /* Verhindert, dass der Link die Textfarbe ändert */
    display: inline-block; /* Wichtig, damit der Link die Größe des Buttons annimmt */
    /* Füge hier weitere Stilbereinigungen hinzu, falls der Link den Button-Stil stört */
}

/* Wichtig: Entferne pointer-events: none; vom .content, wenn du den Button-Klick abfangen willst */
/* Wenn der Klick nur auf den a-Tag gehen soll, kannst du es lassen. */
/* Für einen klickbaren Button ist es oft besser, dies zu entfernen,
   damit die Textebene auch Klicks registriert. */
.button .content {
    pointer-events: auto; /* Ändere von none zu auto */
}

/* Optional: Damit der Cursor auch auf der Textebene ein Pointer ist */
.button .content .char span {
    cursor: pointer;
}

/* Zentrierung des Navigationsbereichs */
/* Zentrierung des Navigationsbereichs */
.footer-links {
    text-align: center; /* Zentriert den Textinhalt (die Links) */
    margin-top: 15px;    /* Optional: Abstand nach oben zum vorherigen Inhalt */
    margin-bottom: 15px; /* Optional: Abstand nach unten zum nächsten Inhalt */
}

/* Stil für die einzelnen Links (Impressum, Datenschutz) */
.footer-links a {
    margin: 0 10px;        /* 0px oben/unten, 10px links/rechts für Abstand */
    text-decoration: none; /* Entfernt den standardmäßigen Unterstrich */
    color: #333;           /* Farbe der Links (passe sie bei Bedarf an) */
    font-weight: 600;      /* **Semibold** (600 ist oft semibold, hängt von der Schriftart ab) */
    transition: font-weight 0.3s ease, text-decoration 0.3s ease; /* Sanfter Übergang für Hover-Effekt */
}

/* Stil beim Hovern (Maus über dem Link) */
.footer-links a:hover {
    font-weight: 700;      /* **Bold** beim Hovern (700 ist oft bold) */
    text-decoration: underline; /* Unterstrich beim Hovern */
}